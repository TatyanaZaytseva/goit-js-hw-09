{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,OAAQJ,SAASC,cAAc,iBAiBjC,SAASI,EAAcC,EAAUP,GAC/B,OAAO,IAAIQ,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,uBAAuBF,QAAeP,OAE9CU,EAAO,sBAAsBH,QAAeP,MAAU,GAEvDA,EAAM,G,CAzBbD,EAAKM,OAAOU,iBAAiB,SAE7B,SAAsBC,GACpBA,EAAMC,iBACN,IAAIjB,EAAQkB,OAAOnB,EAAKC,MAAMmB,OAC1BhB,EAAOe,OAAOnB,EAAKI,KAAKgB,OACxBf,EAASc,OAAOnB,EAAKK,OAAOe,OAChC,IAAK,IAAIZ,EAAW,EAAGA,GAAYH,EAAQG,GAAY,EACrDP,GAAgBG,EAChBG,EAAcC,EAAUP,GACrBoB,MAAKC,GAAUC,EAAAzB,GAAS0B,OAAOC,QAAQH,KACvCI,OAAMC,GAASJ,EAAAzB,GAAS0B,OAAOC,QAAQE,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submit: document.querySelector('.form button'),\n};\nrefs.submit.addEventListener('click', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let delay = Number(refs.delay.value);\n  let step = Number(refs.step.value);\n  let amount = Number(refs.amount.value);\n  for (let position = 1; position <= amount; position += 1) {\n    delay = delay + step;\n    createPromise(position, delay)\n      .then(result => Notiflix.Notify.failure(result))\n      .catch(error => Notiflix.Notify.failure(error));\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","submit","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","Number","value","then","result","$parcel$interopDefault","Notify","failure","catch","error"],"version":3,"file":"03-promises.87665a57.js.map"}